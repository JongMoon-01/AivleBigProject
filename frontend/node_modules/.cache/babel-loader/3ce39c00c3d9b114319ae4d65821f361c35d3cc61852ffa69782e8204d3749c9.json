{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\loginwithadmin\\\\AivleBigProject\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchPublicKey, encryptPassword } from '../utils/rsaEncrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const publicKey = await fetchPublicKey();\n      const encryptedPassword = encryptPassword(formData.password, publicKey);\n      const requestData = {\n        username: formData.username,\n        encryptedPassword: encryptedPassword,\n        password: null\n      };\n      const response = await fetch('http://localhost:8080/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n        setMessageType('success');\n        setFormData({\n          username: '',\n          password: ''\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('username', data.username);\n        localStorage.setItem('isAdmin', data.admin);\n\n        // 권한에 따른 리다이렉트\n        if (data.admin) {\n          window.location.href = '/admin';\n        } else {\n          window.location.href = '/dashboard';\n        }\n      } else {\n        setMessage(data.message);\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('서버 연결 오류가 발생했습니다.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC0AC\\uC6A9\\uC790\\uBA85:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"MeMTK26D6FPKe8tNbGeOmuI7kmE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","fetchPublicKey","encryptPassword","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","username","password","message","setMessage","messageType","setMessageType","handleChange","e","target","name","value","handleSubmit","preventDefault","publicKey","encryptedPassword","requestData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","admin","window","location","href","error","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/loginwithadmin/AivleBigProject/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { fetchPublicKey, encryptPassword } from '../utils/rsaEncrypt';\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const publicKey = await fetchPublicKey();\r\n      const encryptedPassword = encryptPassword(formData.password, publicKey);\r\n      \r\n      const requestData = {\r\n        username: formData.username,\r\n        encryptedPassword: encryptedPassword,\r\n        password: null\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8080/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.message);\r\n        setMessageType('success');\r\n        setFormData({ username: '', password: '' });\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('username', data.username);\r\n        localStorage.setItem('isAdmin', data.admin);\r\n        \r\n        // 권한에 따른 리다이렉트\r\n        if (data.admin) {\r\n          window.location.href = '/admin';\r\n        } else {\r\n          window.location.href = '/dashboard';\r\n        }\r\n      } else {\r\n        setMessage(data.message);\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('서버 연결 오류가 발생했습니다.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>사용자명:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n        <label>비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <button type=\"submit\">로그인</button>\r\n      \r\n      {message && (\r\n        <div className={`message ${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
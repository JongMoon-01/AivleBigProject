{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\\\uD68C\\uC6D0\\uAC00\\uC785\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchPublicKey, encryptPassword } from '../utils/rsaEncrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const publicKey = await fetchPublicKey();\n      const encryptedPassword = encryptPassword(formData.password, publicKey);\n      const requestData = {\n        username: formData.username,\n        email: formData.email,\n        encryptedPassword: encryptedPassword,\n        password: null\n      };\n      const response = await fetch('http://localhost:8080/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n        setMessageType('success');\n        setFormData({\n          username: '',\n          email: '',\n          password: ''\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('username', data.username);\n      } else {\n        setMessage(data.message);\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('서버 연결 오류가 발생했습니다.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC0AC\\uC6A9\\uC790\\uBA85:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"XSE9qbfRMoR3N6V/oQn7dhSjLiM=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","fetchPublicKey","encryptPassword","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","message","setMessage","messageType","setMessageType","handleChange","e","target","name","value","handleSubmit","preventDefault","publicKey","encryptedPassword","requestData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","error","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/회원가입/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchPublicKey, encryptPassword } from '../utils/rsaEncrypt';\n\nfunction Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const publicKey = await fetchPublicKey();\n      const encryptedPassword = encryptPassword(formData.password, publicKey);\n      \n      const requestData = {\n        username: formData.username,\n        email: formData.email,\n        encryptedPassword: encryptedPassword,\n        password: null\n      };\n\n      const response = await fetch('http://localhost:8080/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(data.message);\n        setMessageType('success');\n        setFormData({ username: '', email: '', password: '' });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('username', data.username);\n      } else {\n        setMessage(data.message);\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('서버 연결 오류가 발생했습니다.');\n      setMessageType('error');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label>사용자명:</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <div className=\"form-group\">\n        <label>이메일:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <div className=\"form-group\">\n        <label>비밀번호:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n      </div>\n      \n      <button type=\"submit\">회원가입</button>\n      \n      {message && (\n        <div className={`message ${messageType}`}>\n          {message}\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
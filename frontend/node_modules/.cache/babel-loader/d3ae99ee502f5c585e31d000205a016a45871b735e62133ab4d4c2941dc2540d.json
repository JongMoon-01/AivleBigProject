{"ast":null,"code":"import JSEncrypt from 'jsencrypt';\nexport const encryptPassword = (password, publicKey) => {\n  const encrypt = new JSEncrypt();\n  encrypt.setPublicKey(publicKey);\n  return encrypt.encrypt(password);\n};\nexport const fetchPublicKey = async () => {\n  try {\n    const response = await fetch('http://localhost:8080/api/auth/public-key');\n    if (!response.ok) {\n      throw new Error('Failed to fetch public key');\n    }\n    const data = await response.json();\n    return data.publicKey;\n  } catch (error) {\n    console.error('Error fetching public key:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["JSEncrypt","encryptPassword","password","publicKey","encrypt","setPublicKey","fetchPublicKey","response","fetch","ok","Error","data","json","error","console"],"sources":["C:/Users/User/Downloads/회원가입/frontend/src/utils/rsaEncrypt.js"],"sourcesContent":["import JSEncrypt from 'jsencrypt';\r\n\r\nexport const encryptPassword = (password, publicKey) => {\r\n  const encrypt = new JSEncrypt();\r\n  encrypt.setPublicKey(publicKey);\r\n  return encrypt.encrypt(password);\r\n};\r\n\r\nexport const fetchPublicKey = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:8080/api/auth/public-key');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch public key');\r\n    }\r\n    const data = await response.json();\r\n    return data.publicKey;\r\n  } catch (error) {\r\n    console.error('Error fetching public key:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AAEjC,OAAO,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EACtD,MAAMC,OAAO,GAAG,IAAIJ,SAAS,CAAC,CAAC;EAC/BI,OAAO,CAACC,YAAY,CAACF,SAAS,CAAC;EAC/B,OAAOC,OAAO,CAACA,OAAO,CAACF,QAAQ,CAAC;AAClC,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;IACzE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACR,SAAS;EACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}